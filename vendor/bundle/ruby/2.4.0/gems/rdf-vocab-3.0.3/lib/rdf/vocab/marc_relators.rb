# -*- encoding: utf-8 -*-
# frozen_string_literal: true
# This file generated automatically using rdf vocabulary format from http://id.loc.gov/vocabulary/relators/
require 'rdf'
module RDF::Vocab
  # @!parse
  #   # Vocabulary for <http://id.loc.gov/vocabulary/relators/>
  #   class MARCRelators < RDF::StrictVocabulary
  #   end
  class MARCRelators < RDF::StrictVocabulary("http://id.loc.gov/vocabulary/relators/")

    # Ontology definition
    ontology :"http://id.loc.gov/vocabulary/relators",
      comment: %(
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" class="relatorsAbout" title="About the Relator Codes:" datatype="rdf:XMLLiteral" property="rdfs:comment"><xhtml:p>				Relator terms and their associated codes designate the relationship between an agent and a bibliographic resource. The relator codes are three-character lowercase alphabetic strings that serve as identifiers. Either the term or the code may be used as controlled values.
	</xhtml:p></xhtml:div>
    ).freeze,
      label: "MARC Code List for Relators".freeze,
      :"mads:hasMADSSchemeMember" => [%(marcrelators:collection_BIBFRAMEInstance).freeze, %(marcrelators:collection_BIBFRAMEWork).freeze, %(marcrelators:collection_RDA).freeze, %(marcrelators:collection_RDAContributor).freeze, %(marcrelators:collection_RDACreator).freeze, %(marcrelators:collection_RDADistributor).freeze, %(marcrelators:collection_RDAExpression).freeze, %(marcrelators:collection_RDAItem).freeze, %(marcrelators:collection_RDAManifestation).freeze, %(marcrelators:collection_RDAManufacturer).freeze, %(marcrelators:collection_RDAOther).freeze, %(marcrelators:collection_RDAOwner).freeze, %(marcrelators:collection_RDAPublisher).freeze, %(marcrelators:collection_RDAWork).freeze],
      :"mads:hasTopMemberOfMADSScheme" => [%(marcrelators:abr).freeze, %(marcrelators:acp).freeze, %(marcrelators:act).freeze, %(marcrelators:adi).freeze, %(marcrelators:adp).freeze, %(marcrelators:aft).freeze, %(marcrelators:anl).freeze, %(marcrelators:anm).freeze, %(marcrelators:ann).freeze, %(marcrelators:ant).freeze, %(marcrelators:ape).freeze, %(marcrelators:apl).freeze, %(marcrelators:app).freeze, %(marcrelators:aqt).freeze, %(marcrelators:arc).freeze, %(marcrelators:ard).freeze, %(marcrelators:arr).freeze, %(marcrelators:art).freeze, %(marcrelators:asg).freeze, %(marcrelators:asn).freeze, %(marcrelators:ato).freeze, %(marcrelators:att).freeze, %(marcrelators:auc).freeze, %(marcrelators:aud).freeze, %(marcrelators:aui).freeze, %(marcrelators:aus).freeze, %(marcrelators:aut).freeze, %(marcrelators:bdd).freeze, %(marcrelators:bjd).freeze, %(marcrelators:bkd).freeze, %(marcrelators:bkp).freeze, %(marcrelators:blw).freeze, %(marcrelators:bnd).freeze, %(marcrelators:bpd).freeze, %(marcrelators:brd).freeze, %(marcrelators:brl).freeze, %(marcrelators:bsl).freeze, %(marcrelators:cas).freeze, %(marcrelators:ccp).freeze, %(marcrelators:chr).freeze, %(marcrelators:cli).freeze, %(marcrelators:cll).freeze, %(marcrelators:clr).freeze, %(marcrelators:clt).freeze, %(marcrelators:cmm).freeze, %(marcrelators:cmp).freeze, %(marcrelators:cmt).freeze, %(marcrelators:cnd).freeze, %(marcrelators:cng).freeze, %(marcrelators:cns).freeze, %(marcrelators:coe).freeze, %(marcrelators:col).freeze, %(marcrelators:com).freeze, %(marcrelators:con).freeze, %(marcrelators:cor).freeze, %(marcrelators:cos).freeze, %(marcrelators:cot).freeze, %(marcrelators:cou).freeze, %(marcrelators:cov).freeze, %(marcrelators:cpc).freeze, %(marcrelators:cpe).freeze, %(marcrelators:cph).freeze, %(marcrelators:cpl).freeze, %(marcrelators:cpt).freeze, %(marcrelators:cre).freeze, %(marcrelators:crp).freeze, %(marcrelators:crr).freeze, %(marcrelators:crt).freeze, %(marcrelators:csl).freeze, %(marcrelators:csp).freeze, %(marcrelators:cst).freeze, %(marcrelators:ctb).freeze, %(marcrelators:cte).freeze, %(marcrelators:ctg).freeze, %(marcrelators:ctr).freeze, %(marcrelators:cts).freeze, %(marcrelators:ctt).freeze, %(marcrelators:cur).freeze, %(marcrelators:cwt).freeze, %(marcrelators:dbp).freeze, %(marcrelators:dfd).freeze, %(marcrelators:dfe).freeze, %(marcrelators:dft).freeze, %(marcrelators:dgg).freeze, %(marcrelators:dgs).freeze, %(marcrelators:dis).freeze, %(marcrelators:dln).freeze, %(marcrelators:dnc).freeze, %(marcrelators:dnr).freeze, %(marcrelators:dpc).freeze, %(marcrelators:dpt).freeze, %(marcrelators:drm).freeze, %(marcrelators:drt).freeze, %(marcrelators:dsr).freeze, %(marcrelators:dst).freeze, %(marcrelators:dtc).freeze, %(marcrelators:dte).freeze, %(marcrelators:dtm).freeze, %(marcrelators:dto).freeze, %(marcrelators:dub).freeze, %(marcrelators:edc).freeze, %(marcrelators:edm).freeze, %(marcrelators:edt).freeze, %(marcrelators:egr).freeze, %(marcrelators:elg).freeze, %(marcrelators:elt).freeze, %(marcrelators:eng).freeze, %(marcrelators:enj).freeze, %(marcrelators:etr).freeze, %(marcrelators:evp).freeze, %(marcrelators:exp).freeze, %(marcrelators:fac).freeze, %(marcrelators:fds).freeze, %(marcrelators:fld).freeze, %(marcrelators:flm).freeze, %(marcrelators:fmd).freeze, %(marcrelators:fmk).freeze, %(marcrelators:fmo).freeze, %(marcrelators:fmp).freeze, %(marcrelators:fnd).freeze, %(marcrelators:fpy).freeze, %(marcrelators:frg).freeze, %(marcrelators:gis).freeze, %(marcrelators:his).freeze, %(marcrelators:hnr).freeze, %(marcrelators:hst).freeze, %(marcrelators:ill).freeze, %(marcrelators:ilu).freeze, %(marcrelators:ins).freeze, %(marcrelators:inv).freeze, %(marcrelators:isb).freeze, %(marcrelators:itr).freeze, %(marcrelators:ive).freeze, %(marcrelators:ivr).freeze, %(marcrelators:jud).freeze, %(marcrelators:jug).freeze, %(marcrelators:lbr).freeze, %(marcrelators:lbt).freeze, %(marcrelators:ldr).freeze, %(marcrelators:led).freeze, %(marcrelators:lee).freeze, %(marcrelators:lel).freeze, %(marcrelators:len).freeze, %(marcrelators:let).freeze, %(marcrelators:lgd).freeze, %(marcrelators:lie).freeze, %(marcrelators:lil).freeze, %(marcrelators:lit).freeze, %(marcrelators:lsa).freeze, %(marcrelators:lse).freeze, %(marcrelators:lso).freeze, %(marcrelators:ltg).freeze, %(marcrelators:lyr).freeze, %(marcrelators:mcp).freeze, %(marcrelators:mdc).freeze, %(marcrelators:med).freeze, %(marcrelators:mfp).freeze, %(marcrelators:mfr).freeze, %(marcrelators:mod).freeze, %(marcrelators:mon).freeze, %(marcrelators:mrb).freeze, %(marcrelators:mrk).freeze, %(marcrelators:msd).freeze, %(marcrelators:mte).freeze, %(marcrelators:mtk).freeze, %(marcrelators:mus).freeze, %(marcrelators:nrt).freeze, %(marcrelators:opn).freeze, %(marcrelators:org).freeze, %(marcrelators:orm).freeze, %(marcrelators:osp).freeze, %(marcrelators:oth).freeze, %(marcrelators:own).freeze, %(marcrelators:pan).freeze, %(marcrelators:pat).freeze, %(marcrelators:pbd).freeze, %(marcrelators:pbl).freeze, %(marcrelators:pdr).freeze, %(marcrelators:pfr).freeze, %(marcrelators:pht).freeze, %(marcrelators:plt).freeze, %(marcrelators:pma).freeze, %(marcrelators:pmn).freeze, %(marcrelators:pop).freeze, %(marcrelators:ppm).freeze, %(marcrelators:ppt).freeze, %(marcrelators:pra).freeze, %(marcrelators:prc).freeze, %(marcrelators:prd).freeze, %(marcrelators:pre).freeze, %(marcrelators:prf).freeze, %(marcrelators:prg).freeze, %(marcrelators:prm).freeze, %(marcrelators:prn).freeze, %(marcrelators:pro).freeze, %(marcrelators:prp).freeze, %(marcrelators:prs).freeze, %(marcrelators:prt).freeze, %(marcrelators:prv).freeze, %(marcrelators:pta).freeze, %(marcrelators:pte).freeze, %(marcrelators:ptf).freeze, %(marcrelators:pth).freeze, %(marcrelators:ptt).freeze, %(marcrelators:pup).freeze, %(marcrelators:rbr).freeze, %(marcrelators:rcd).freeze, %(marcrelators:rce).freeze, %(marcrelators:rcp).freeze, %(marcrelators:rdd).freeze, %(marcrelators:red).freeze, %(marcrelators:ren).freeze, %(marcrelators:res).freeze, %(marcrelators:rev).freeze, %(marcrelators:rpc).freeze, %(marcrelators:rps).freeze, %(marcrelators:rpt).freeze, %(marcrelators:rpy).freeze, %(marcrelators:rse).freeze, %(marcrelators:rsg).freeze, %(marcrelators:rsp).freeze, %(marcrelators:rsr).freeze, %(marcrelators:rst).freeze, %(marcrelators:rth).freeze, %(marcrelators:rtm).freeze, %(marcrelators:sad).freeze, %(marcrelators:sce).freeze, %(marcrelators:scl).freeze, %(marcrelators:scr).freeze, %(marcrelators:sds).freeze, %(marcrelators:sec).freeze, %(marcrelators:sgd).freeze, %(marcrelators:sgn).freeze, %(marcrelators:sht).freeze, %(marcrelators:sll).freeze, %(marcrelators:sng).freeze, %(marcrelators:spk).freeze, %(marcrelators:spn).freeze, %(marcrelators:spy).freeze, %(marcrelators:srv).freeze, %(marcrelators:std).freeze, %(marcrelators:stg).freeze, %(marcrelators:stl).freeze, %(marcrelators:stm).freeze, %(marcrelators:stn).freeze, %(marcrelators:str).freeze, %(marcrelators:tcd).freeze, %(marcrelators:tch).freeze, %(marcrelators:ths).freeze, %(marcrelators:tld).freeze, %(marcrelators:tlp).freeze, %(marcrelators:trc).freeze, %(marcrelators:trl).freeze, %(marcrelators:tyd).freeze, %(marcrelators:tyg).freeze, %(marcrelators:uvp).freeze, %(marcrelators:vac).freeze, %(marcrelators:vdg).freeze, %(marcrelators:wac).freeze, %(marcrelators:wal).freeze, %(marcrelators:wam).freeze, %(marcrelators:wat).freeze, %(marcrelators:wdc).freeze, %(marcrelators:wde).freeze, %(marcrelators:win).freeze, %(marcrelators:wit).freeze, %(marcrelators:wpr).freeze, %(marcrelators:wst).freeze],
      hasTopConcept: [%(marcrelators:abr).freeze, %(marcrelators:acp).freeze, %(marcrelators:act).freeze, %(marcrelators:adi).freeze, %(marcrelators:adp).freeze, %(marcrelators:aft).freeze, %(marcrelators:anl).freeze, %(marcrelators:anm).freeze, %(marcrelators:ann).freeze, %(marcrelators:ant).freeze, %(marcrelators:ape).freeze, %(marcrelators:apl).freeze, %(marcrelators:app).freeze, %(marcrelators:aqt).freeze, %(marcrelators:arc).freeze, %(marcrelators:ard).freeze, %(marcrelators:arr).freeze, %(marcrelators:art).freeze, %(marcrelators:asg).freeze, %(marcrelators:asn).freeze, %(marcrelators:ato).freeze, %(marcrelators:att).freeze, %(marcrelators:auc).freeze, %(marcrelators:aud).freeze, %(marcrelators:aui).freeze, %(marcrelators:aus).freeze, %(marcrelators:aut).freeze, %(marcrelators:bdd).freeze, %(marcrelators:bjd).freeze, %(marcrelators:bkd).freeze, %(marcrelators:bkp).freeze, %(marcrelators:blw).freeze, %(marcrelators:bnd).freeze, %(marcrelators:bpd).freeze, %(marcrelators:brd).freeze, %(marcrelators:brl).freeze, %(marcrelators:bsl).freeze, %(marcrelators:cas).freeze, %(marcrelators:ccp).freeze, %(marcrelators:chr).freeze, %(marcrelators:cli).freeze, %(marcrelators:cll).freeze, %(marcrelators:clr).freeze, %(marcrelators:clt).freeze, %(marcrelators:cmm).freeze, %(marcrelators:cmp).freeze, %(marcrelators:cmt).freeze, %(marcrelators:cnd).freeze, %(marcrelators:cng).freeze, %(marcrelators:cns).freeze, %(marcrelators:coe).freeze, %(marcrelators:col).freeze, %(marcrelators:com).freeze, %(marcrelators:con).freeze, %(marcrelators:cor).freeze, %(marcrelators:cos).freeze, %(marcrelators:cot).freeze, %(marcrelators:cou).freeze, %(marcrelators:cov).freeze, %(marcrelators:cpc).freeze, %(marcrelators:cpe).freeze, %(marcrelators:cph).freeze, %(marcrelators:cpl).freeze, %(marcrelators:cpt).freeze, %(marcrelators:cre).freeze, %(marcrelators:crp).freeze, %(marcrelators:crr).freeze, %(marcrelators:crt).freeze, %(marcrelators:csl).freeze, %(marcrelators:csp).freeze, %(marcrelators:cst).freeze, %(marcrelators:ctb).freeze, %(marcrelators:cte).freeze, %(marcrelators:ctg).freeze, %(marcrelators:ctr).freeze, %(marcrelators:cts).freeze, %(marcrelators:ctt).freeze, %(marcrelators:cur).freeze, %(marcrelators:cwt).freeze, %(marcrelators:dbp).freeze, %(marcrelators:dfd).freeze, %(marcrelators:dfe).freeze, %(marcrelators:dft).freeze, %(marcrelators:dgg).freeze, %(marcrelators:dgs).freeze, %(marcrelators:dis).freeze, %(marcrelators:dln).freeze, %(marcrelators:dnc).freeze, %(marcrelators:dnr).freeze, %(marcrelators:dpc).freeze, %(marcrelators:dpt).freeze, %(marcrelators:drm).freeze, %(marcrelators:drt).freeze, %(marcrelators:dsr).freeze, %(marcrelators:dst).freeze, %(marcrelators:dtc).freeze, %(marcrelators:dte).freeze, %(marcrelators:dtm).freeze, %(marcrelators:dto).freeze, %(marcrelators:dub).freeze, %(marcrelators:edc).freeze, %(marcrelators:edm).freeze, %(marcrelators:edt).freeze, %(marcrelators:egr).freeze, %(marcrelators:elg).freeze, %(marcrelators:elt).freeze, %(marcrelators:eng).freeze, %(marcrelators:enj).freeze, %(marcrelators:etr).freeze, %(marcrelators:evp).freeze, %(marcrelators:exp).freeze, %(marcrelators:fac).freeze, %(marcrelators:fds).freeze, %(marcrelators:fld).freeze, %(marcrelators:flm).freeze, %(marcrelators:fmd).freeze, %(marcrelators:fmk).freeze, %(marcrelators:fmo).freeze, %(marcrelators:fmp).freeze, %(marcrelators:fnd).freeze, %(marcrelators:fpy).freeze, %(marcrelators:frg).freeze, %(marcrelators:gis).freeze, %(marcrelators:his).freeze, %(marcrelators:hnr).freeze, %(marcrelators:hst).freeze, %(marcrelators:ill).freeze, %(marcrelators:ilu).freeze, %(marcrelators:ins).freeze, %(marcrelators:inv).freeze, %(marcrelators:isb).freeze, %(marcrelators:itr).freeze, %(marcrelators:ive).freeze, %(marcrelators:ivr).freeze, %(marcrelators:jud).freeze, %(marcrelators:jug).freeze, %(marcrelators:lbr).freeze, %(marcrelators:lbt).freeze, %(marcrelators:ldr).freeze, %(marcrelators:led).freeze, %(marcrelators:lee).freeze, %(marcrelators:lel).freeze, %(marcrelators:len).freeze, %(marcrelators:let).freeze, %(marcrelators:lgd).freeze, %(marcrelators:lie).freeze, %(marcrelators:lil).freeze, %(marcrelators:lit).freeze, %(marcrelators:lsa).freeze, %(marcrelators:lse).freeze, %(marcrelators:lso).freeze, %(marcrelators:ltg).freeze, %(marcrelators:lyr).freeze, %(marcrelators:mcp).freeze, %(marcrelators:mdc).freeze, %(marcrelators:med).freeze, %(marcrelators:mfp).freeze, %(marcrelators:mfr).freeze, %(marcrelators:mod).freeze, %(marcrelators:mon).freeze, %(marcrelators:mrb).freeze, %(marcrelators:mrk).freeze, %(marcrelators:msd).freeze, %(marcrelators:mte).freeze, %(marcrelators:mtk).freeze, %(marcrelators:mus).freeze, %(marcrelators:nrt).freeze, %(marcrelators:opn).freeze, %(marcrelators:org).freeze, %(marcrelators:orm).freeze, %(marcrelators:osp).freeze, %(marcrelators:oth).freeze, %(marcrelators:own).freeze, %(marcrelators:pan).freeze, %(marcrelators:pat).freeze, %(marcrelators:pbd).freeze, %(marcrelators:pbl).freeze, %(marcrelators:pdr).freeze, %(marcrelators:pfr).freeze, %(marcrelators:pht).freeze, %(marcrelators:plt).freeze, %(marcrelators:pma).freeze, %(marcrelators:pmn).freeze, %(marcrelators:pop).freeze, %(marcrelators:ppm).freeze, %(marcrelators:ppt).freeze, %(marcrelators:pra).freeze, %(marcrelators:prc).freeze, %(marcrelators:prd).freeze, %(marcrelators:pre).freeze, %(marcrelators:prf).freeze, %(marcrelators:prg).freeze, %(marcrelators:prm).freeze, %(marcrelators:prn).freeze, %(marcrelators:pro).freeze, %(marcrelators:prp).freeze, %(marcrelators:prs).freeze, %(marcrelators:prt).freeze, %(marcrelators:prv).freeze, %(marcrelators:pta).freeze, %(marcrelators:pte).freeze, %(marcrelators:ptf).freeze, %(marcrelators:pth).freeze, %(marcrelators:ptt).freeze, %(marcrelators:pup).freeze, %(marcrelators:rbr).freeze, %(marcrelators:rcd).freeze, %(marcrelators:rce).freeze, %(marcrelators:rcp).freeze, %(marcrelators:rdd).freeze, %(marcrelators:red).freeze, %(marcrelators:ren).freeze, %(marcrelators:res).freeze, %(marcrelators:rev).freeze, %(marcrelators:rpc).freeze, %(marcrelators:rps).freeze, %(marcrelators:rpt).freeze, %(marcrelators:rpy).freeze, %(marcrelators:rse).freeze, %(marcrelators:rsg).freeze, %(marcrelators:rsp).freeze, %(marcrelators:rsr).freeze, %(marcrelators:rst).freeze, %(marcrelators:rth).freeze, %(marcrelators:rtm).freeze, %(marcrelators:sad).freeze, %(marcrelators:sce).freeze, %(marcrelators:scl).freeze, %(marcrelators:scr).freeze, %(marcrelators:sds).freeze, %(marcrelators:sec).freeze, %(marcrelators:sgd).freeze, %(marcrelators:sgn).freeze, %(marcrelators:sht).freeze, %(marcrelators:sll).freeze, %(marcrelators:sng).freeze, %(marcrelators:spk).freeze, %(marcrelators:spn).freeze, %(marcrelators:spy).freeze, %(marcrelators:srv).freeze, %(marcrelators:std).freeze, %(marcrelators:stg).freeze, %(marcrelators:stl).freeze, %(marcrelators:stm).freeze, %(marcrelators:stn).freeze, %(marcrelators:str).freeze, %(marcrelators:tcd).freeze, %(marcrelators:tch).freeze, %(marcrelators:ths).freeze, %(marcrelators:tld).freeze, %(marcrelators:tlp).freeze, %(marcrelators:trc).freeze, %(marcrelators:trl).freeze, %(marcrelators:tyd).freeze, %(marcrelators:tyg).freeze, %(marcrelators:uvp).freeze, %(marcrelators:vac).freeze, %(marcrelators:vdg).freeze, %(marcrelators:wac).freeze, %(marcrelators:wal).freeze, %(marcrelators:wam).freeze, %(marcrelators:wat).freeze, %(marcrelators:wdc).freeze, %(marcrelators:wde).freeze, %(marcrelators:win).freeze, %(marcrelators:wit).freeze, %(marcrelators:wpr).freeze, %(marcrelators:wst).freeze],
      type: ["mads:MADSScheme".freeze, "skos:ConceptScheme".freeze]

    # Property definitions
    property :abr,
      label: "Abridger".freeze,
      :"mads:authoritativeLabel" => %(Abridger).freeze,
      :"mads:code" => %(abr).freeze,
      notation: %(abr).freeze,
      prefLabel: %(Abridger).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :acp,
      label: "Art copyist".freeze,
      :"mads:authoritativeLabel" => %(Art copyist).freeze,
      :"mads:code" => %(acp).freeze,
      notation: %(acp).freeze,
      prefLabel: %(Art copyist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :act,
      label: "Actor".freeze,
      :"mads:authoritativeLabel" => %(Actor).freeze,
      :"mads:code" => %(act).freeze,
      notation: %(act).freeze,
      prefLabel: %(Actor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :adi,
      label: "Art director".freeze,
      :"mads:authoritativeLabel" => %(Art director).freeze,
      :"mads:code" => %(adi).freeze,
      notation: %(adi).freeze,
      prefLabel: %(Art director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :adp,
      label: "Adapter".freeze,
      :"mads:authoritativeLabel" => %(Adapter).freeze,
      :"mads:code" => %(adp).freeze,
      notation: %(adp).freeze,
      prefLabel: %(Adapter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aft,
      label: "Author of afterword, colophon, etc.".freeze,
      :"mads:authoritativeLabel" => %(Author of afterword, colophon, etc.).freeze,
      :"mads:code" => %(aft).freeze,
      notation: %(aft).freeze,
      prefLabel: %(Author of afterword, colophon, etc.).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :anl,
      label: "Analyst".freeze,
      :"mads:authoritativeLabel" => %(Analyst).freeze,
      :"mads:code" => %(anl).freeze,
      notation: %(anl).freeze,
      prefLabel: %(Analyst).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :anm,
      label: "Animator".freeze,
      :"mads:authoritativeLabel" => %(Animator).freeze,
      :"mads:code" => %(anm).freeze,
      notation: %(anm).freeze,
      prefLabel: %(Animator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ann,
      label: "Annotator".freeze,
      :"mads:authoritativeLabel" => %(Annotator).freeze,
      :"mads:code" => %(ann).freeze,
      notation: %(ann).freeze,
      prefLabel: %(Annotator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ant,
      label: "Bibliographic antecedent".freeze,
      :"mads:authoritativeLabel" => %(Bibliographic antecedent).freeze,
      :"mads:code" => %(ant).freeze,
      notation: %(ant).freeze,
      prefLabel: %(Bibliographic antecedent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ape,
      label: "Appellee".freeze,
      :"mads:authoritativeLabel" => %(Appellee).freeze,
      :"mads:code" => %(ape).freeze,
      notation: %(ape).freeze,
      prefLabel: %(Appellee).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :apl,
      label: "Appellant".freeze,
      :"mads:authoritativeLabel" => %(Appellant).freeze,
      :"mads:code" => %(apl).freeze,
      notation: %(apl).freeze,
      prefLabel: %(Appellant).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :app,
      label: "Applicant".freeze,
      :"mads:authoritativeLabel" => %(Applicant).freeze,
      :"mads:code" => %(app).freeze,
      notation: %(app).freeze,
      prefLabel: %(Applicant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aqt,
      label: "Author in quotations or text abstracts".freeze,
      :"mads:authoritativeLabel" => %(Author in quotations or text abstracts).freeze,
      :"mads:code" => %(aqt).freeze,
      notation: %(aqt).freeze,
      prefLabel: %(Author in quotations or text abstracts).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :arc,
      label: "Architect".freeze,
      :"mads:authoritativeLabel" => %(Architect).freeze,
      :"mads:code" => %(arc).freeze,
      notation: %(arc).freeze,
      prefLabel: %(Architect).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ard,
      label: "Artistic director".freeze,
      :"mads:authoritativeLabel" => %(Artistic director).freeze,
      :"mads:code" => %(ard).freeze,
      notation: %(ard).freeze,
      prefLabel: %(Artistic director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :arr,
      label: "Arranger".freeze,
      :"mads:authoritativeLabel" => %(Arranger).freeze,
      :"mads:code" => %(arr).freeze,
      notation: %(arr).freeze,
      prefLabel: %(Arranger).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :art,
      label: "Artist".freeze,
      :"mads:authoritativeLabel" => %(Artist).freeze,
      :"mads:code" => %(art).freeze,
      notation: %(art).freeze,
      prefLabel: %(Artist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :asg,
      label: "Assignee".freeze,
      :"mads:authoritativeLabel" => %(Assignee).freeze,
      :"mads:code" => %(asg).freeze,
      notation: %(asg).freeze,
      prefLabel: %(Assignee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :asn,
      label: "Associated name".freeze,
      :"mads:authoritativeLabel" => %(Associated name).freeze,
      :"mads:code" => %(asn).freeze,
      notation: %(asn).freeze,
      prefLabel: %(Associated name).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ato,
      label: "Autographer".freeze,
      :"mads:authoritativeLabel" => %(Autographer).freeze,
      :"mads:code" => %(ato).freeze,
      notation: %(ato).freeze,
      prefLabel: %(Autographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :att,
      label: "Attributed name".freeze,
      :"mads:authoritativeLabel" => %(Attributed name).freeze,
      :"mads:code" => %(att).freeze,
      notation: %(att).freeze,
      prefLabel: %(Attributed name).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :auc,
      label: "Auctioneer".freeze,
      :"mads:authoritativeLabel" => %(Auctioneer).freeze,
      :"mads:code" => %(auc).freeze,
      notation: %(auc).freeze,
      prefLabel: %(Auctioneer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aud,
      label: "Author of dialog".freeze,
      :"mads:authoritativeLabel" => %(Author of dialog).freeze,
      :"mads:code" => %(aud).freeze,
      notation: %(aud).freeze,
      prefLabel: %(Author of dialog).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aui,
      label: "Author of introduction, etc.".freeze,
      :"mads:authoritativeLabel" => %(Author of introduction, etc.).freeze,
      :"mads:code" => %(aui).freeze,
      notation: %(aui).freeze,
      prefLabel: %(Author of introduction, etc.).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aus,
      label: "Screenwriter".freeze,
      :"mads:authoritativeLabel" => %(Screenwriter).freeze,
      :"mads:code" => %(aus).freeze,
      notation: %(aus).freeze,
      prefLabel: %(Screenwriter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :aut,
      label: "Author".freeze,
      :"mads:authoritativeLabel" => %(Author).freeze,
      :"mads:code" => %(aut).freeze,
      notation: %(aut).freeze,
      prefLabel: %(Author).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bdd,
      label: "Binding designer".freeze,
      :"mads:authoritativeLabel" => %(Binding designer).freeze,
      :"mads:code" => %(bdd).freeze,
      notation: %(bdd).freeze,
      prefLabel: %(Binding designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bjd,
      label: "Bookjacket designer".freeze,
      :"mads:authoritativeLabel" => %(Bookjacket designer).freeze,
      :"mads:code" => %(bjd).freeze,
      notation: %(bjd).freeze,
      prefLabel: %(Bookjacket designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bkd,
      label: "Book designer".freeze,
      :"mads:authoritativeLabel" => %(Book designer).freeze,
      :"mads:code" => %(bkd).freeze,
      notation: %(bkd).freeze,
      prefLabel: %(Book designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bkp,
      label: "Book producer".freeze,
      :"mads:authoritativeLabel" => %(Book producer).freeze,
      :"mads:code" => %(bkp).freeze,
      notation: %(bkp).freeze,
      prefLabel: %(Book producer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :blw,
      label: "Blurb writer".freeze,
      :"mads:authoritativeLabel" => %(Blurb writer).freeze,
      :"mads:code" => %(blw).freeze,
      notation: %(blw).freeze,
      prefLabel: %(Blurb writer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bnd,
      label: "Binder".freeze,
      :"mads:authoritativeLabel" => %(Binder).freeze,
      :"mads:code" => %(bnd).freeze,
      notation: %(bnd).freeze,
      prefLabel: %(Binder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bpd,
      label: "Bookplate designer".freeze,
      :"mads:authoritativeLabel" => %(Bookplate designer).freeze,
      :"mads:code" => %(bpd).freeze,
      notation: %(bpd).freeze,
      prefLabel: %(Bookplate designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :brd,
      label: "Broadcaster".freeze,
      :"mads:authoritativeLabel" => %(Broadcaster).freeze,
      :"mads:code" => %(brd).freeze,
      notation: %(brd).freeze,
      prefLabel: %(Broadcaster).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :brl,
      label: "Braille embosser".freeze,
      :"mads:authoritativeLabel" => %(Braille embosser).freeze,
      :"mads:code" => %(brl).freeze,
      notation: %(brl).freeze,
      prefLabel: %(Braille embosser).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :bsl,
      label: "Bookseller".freeze,
      :"mads:authoritativeLabel" => %(Bookseller).freeze,
      :"mads:code" => %(bsl).freeze,
      notation: %(bsl).freeze,
      prefLabel: %(Bookseller).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cas,
      label: "Caster".freeze,
      :"mads:authoritativeLabel" => %(Caster).freeze,
      :"mads:code" => %(cas).freeze,
      notation: %(cas).freeze,
      prefLabel: %(Caster).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ccp,
      label: "Conceptor".freeze,
      :"mads:authoritativeLabel" => %(Conceptor).freeze,
      :"mads:code" => %(ccp).freeze,
      notation: %(ccp).freeze,
      prefLabel: %(Conceptor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :chr,
      label: "Choreographer".freeze,
      :"mads:authoritativeLabel" => %(Choreographer).freeze,
      :"mads:code" => %(chr).freeze,
      notation: %(chr).freeze,
      prefLabel: %(Choreographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cli,
      label: "Client".freeze,
      :"mads:authoritativeLabel" => %(Client).freeze,
      :"mads:code" => %(cli).freeze,
      notation: %(cli).freeze,
      prefLabel: %(Client).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cll,
      label: "Calligrapher".freeze,
      :"mads:authoritativeLabel" => %(Calligrapher).freeze,
      :"mads:code" => %(cll).freeze,
      notation: %(cll).freeze,
      prefLabel: %(Calligrapher).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :clr,
      label: "Colorist".freeze,
      :"mads:authoritativeLabel" => %(Colorist).freeze,
      :"mads:code" => %(clr).freeze,
      notation: %(clr).freeze,
      prefLabel: %(Colorist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :clt,
      label: "Collotyper".freeze,
      :"mads:authoritativeLabel" => %(Collotyper).freeze,
      :"mads:code" => %(clt).freeze,
      notation: %(clt).freeze,
      prefLabel: %(Collotyper).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmm,
      label: "Commentator".freeze,
      :"mads:authoritativeLabel" => %(Commentator).freeze,
      :"mads:code" => %(cmm).freeze,
      notation: %(cmm).freeze,
      prefLabel: %(Commentator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmp,
      label: "Composer".freeze,
      :"mads:authoritativeLabel" => %(Composer).freeze,
      :"mads:code" => %(cmp).freeze,
      notation: %(cmp).freeze,
      prefLabel: %(Composer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cmt,
      label: "Compositor".freeze,
      :"mads:authoritativeLabel" => %(Compositor).freeze,
      :"mads:code" => %(cmt).freeze,
      notation: %(cmt).freeze,
      prefLabel: %(Compositor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cnd,
      label: "Conductor".freeze,
      :"mads:authoritativeLabel" => %(Conductor).freeze,
      :"mads:code" => %(cnd).freeze,
      notation: %(cnd).freeze,
      prefLabel: %(Conductor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cng,
      label: "Cinematographer".freeze,
      :"mads:authoritativeLabel" => %(Cinematographer).freeze,
      :"mads:code" => %(cng).freeze,
      notation: %(cng).freeze,
      prefLabel: %(Cinematographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cns,
      label: "Censor".freeze,
      :"mads:authoritativeLabel" => %(Censor).freeze,
      :"mads:code" => %(cns).freeze,
      notation: %(cns).freeze,
      prefLabel: %(Censor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :coe,
      label: "Contestant-appellee".freeze,
      :"mads:authoritativeLabel" => %(Contestant-appellee).freeze,
      :"mads:code" => %(coe).freeze,
      notation: %(coe).freeze,
      prefLabel: %(Contestant-appellee).freeze,
      subPropertyOf: ["marcrelators:cos".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :col,
      label: "Collector".freeze,
      :"mads:authoritativeLabel" => %(Collector).freeze,
      :"mads:code" => %(col).freeze,
      notation: %(col).freeze,
      prefLabel: %(Collector).freeze,
      subPropertyOf: ["marcrelators:cur".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :com,
      label: "Compiler".freeze,
      :"mads:authoritativeLabel" => %(Compiler).freeze,
      :"mads:code" => %(com).freeze,
      notation: %(com).freeze,
      prefLabel: %(Compiler).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :con,
      label: "Conservator".freeze,
      :"mads:authoritativeLabel" => %(Conservator).freeze,
      :"mads:code" => %(con).freeze,
      notation: %(con).freeze,
      prefLabel: %(Conservator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cor,
      label: "Collection registrar".freeze,
      :"mads:authoritativeLabel" => %(Collection registrar).freeze,
      :"mads:code" => %(cor).freeze,
      notation: %(cor).freeze,
      prefLabel: %(Collection registrar).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:cur".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cos,
      label: "Contestant".freeze,
      :"mads:authoritativeLabel" => %(Contestant).freeze,
      :"mads:code" => %(cos).freeze,
      notation: %(cos).freeze,
      prefLabel: %(Contestant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cot,
      label: "Contestant-appellant".freeze,
      :"mads:authoritativeLabel" => %(Contestant-appellant).freeze,
      :"mads:code" => %(cot).freeze,
      notation: %(cot).freeze,
      prefLabel: %(Contestant-appellant).freeze,
      subPropertyOf: ["marcrelators:cos".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cou,
      label: "Court governed".freeze,
      :"mads:authoritativeLabel" => %(Court governed).freeze,
      :"mads:code" => %(cou).freeze,
      notation: %(cou).freeze,
      prefLabel: %(Court governed).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cov,
      label: "Cover designer".freeze,
      :"mads:authoritativeLabel" => %(Cover designer).freeze,
      :"mads:code" => %(cov).freeze,
      notation: %(cov).freeze,
      prefLabel: %(Cover designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpc,
      label: "Copyright claimant".freeze,
      :"mads:authoritativeLabel" => %(Copyright claimant).freeze,
      :"mads:code" => %(cpc).freeze,
      notation: %(cpc).freeze,
      prefLabel: %(Copyright claimant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpe,
      label: "Complainant-appellee".freeze,
      :"mads:authoritativeLabel" => %(Complainant-appellee).freeze,
      :"mads:code" => %(cpe).freeze,
      notation: %(cpe).freeze,
      prefLabel: %(Complainant-appellee).freeze,
      subPropertyOf: ["marcrelators:cpl".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cph,
      label: "Copyright holder".freeze,
      :"mads:authoritativeLabel" => %(Copyright holder).freeze,
      :"mads:code" => %(cph).freeze,
      notation: %(cph).freeze,
      prefLabel: %(Copyright holder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpl,
      label: "Complainant".freeze,
      :"mads:authoritativeLabel" => %(Complainant).freeze,
      :"mads:code" => %(cpl).freeze,
      notation: %(cpl).freeze,
      prefLabel: %(Complainant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cpt,
      label: "Complainant-appellant".freeze,
      :"mads:authoritativeLabel" => %(Complainant-appellant).freeze,
      :"mads:code" => %(cpt).freeze,
      notation: %(cpt).freeze,
      prefLabel: %(Complainant-appellant).freeze,
      subPropertyOf: ["marcrelators:cpl".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cre,
      label: "Creator".freeze,
      :"mads:authoritativeLabel" => %(Creator).freeze,
      :"mads:code" => %(cre).freeze,
      notation: %(cre).freeze,
      prefLabel: %(Creator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "dc11:creator".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crp,
      label: "Correspondent".freeze,
      :"mads:authoritativeLabel" => %(Correspondent).freeze,
      :"mads:code" => %(crp).freeze,
      notation: %(crp).freeze,
      prefLabel: %(Correspondent).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crr,
      label: "Corrector".freeze,
      :"mads:authoritativeLabel" => %(Corrector).freeze,
      :"mads:code" => %(crr).freeze,
      notation: %(crr).freeze,
      prefLabel: %(Corrector).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :crt,
      label: "Court reporter".freeze,
      :"mads:authoritativeLabel" => %(Court reporter).freeze,
      :"mads:code" => %(crt).freeze,
      notation: %(crt).freeze,
      prefLabel: %(Court reporter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :csl,
      label: "Consultant".freeze,
      :"mads:authoritativeLabel" => %(Consultant).freeze,
      :"mads:code" => %(csl).freeze,
      notation: %(csl).freeze,
      prefLabel: %(Consultant).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :csp,
      label: "Consultant to a project".freeze,
      :"mads:authoritativeLabel" => %(Consultant to a project).freeze,
      :"mads:code" => %(csp).freeze,
      notation: %(csp).freeze,
      prefLabel: %(Consultant to a project).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cst,
      label: "Costume designer".freeze,
      :"mads:authoritativeLabel" => %(Costume designer).freeze,
      :"mads:code" => %(cst).freeze,
      notation: %(cst).freeze,
      prefLabel: %(Costume designer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctb,
      label: "Contributor".freeze,
      :"mads:authoritativeLabel" => %(Contributor).freeze,
      :"mads:code" => %(ctb).freeze,
      notation: %(ctb).freeze,
      prefLabel: %(Contributor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cte,
      label: "Contestee-appellee".freeze,
      :"mads:authoritativeLabel" => %(Contestee-appellee).freeze,
      :"mads:code" => %(cte).freeze,
      notation: %(cte).freeze,
      prefLabel: %(Contestee-appellee).freeze,
      subPropertyOf: ["marcrelators:cts".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctg,
      label: "Cartographer".freeze,
      :"mads:authoritativeLabel" => %(Cartographer).freeze,
      :"mads:code" => %(ctg).freeze,
      notation: %(ctg).freeze,
      prefLabel: %(Cartographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctr,
      label: "Contractor".freeze,
      :"mads:authoritativeLabel" => %(Contractor).freeze,
      :"mads:code" => %(ctr).freeze,
      notation: %(ctr).freeze,
      prefLabel: %(Contractor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cts,
      label: "Contestee".freeze,
      :"mads:authoritativeLabel" => %(Contestee).freeze,
      :"mads:code" => %(cts).freeze,
      notation: %(cts).freeze,
      prefLabel: %(Contestee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ctt,
      label: "Contestee-appellant".freeze,
      :"mads:authoritativeLabel" => %(Contestee-appellant).freeze,
      :"mads:code" => %(ctt).freeze,
      notation: %(ctt).freeze,
      prefLabel: %(Contestee-appellant).freeze,
      subPropertyOf: ["marcrelators:cts".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cur,
      label: "Curator".freeze,
      :"mads:authoritativeLabel" => %(Curator).freeze,
      :"mads:code" => %(cur).freeze,
      notation: %(cur).freeze,
      prefLabel: %(Curator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :cwt,
      label: "Commentator for written text".freeze,
      :"mads:authoritativeLabel" => %(Commentator for written text).freeze,
      :"mads:code" => %(cwt).freeze,
      notation: %(cwt).freeze,
      prefLabel: %(Commentator for written text).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dbp,
      label: "Distribution place".freeze,
      :"mads:authoritativeLabel" => %(Distribution place).freeze,
      :"mads:code" => %(dbp).freeze,
      notation: %(dbp).freeze,
      prefLabel: %(Distribution place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dfd,
      label: "Defendant".freeze,
      :"mads:authoritativeLabel" => %(Defendant).freeze,
      :"mads:code" => %(dfd).freeze,
      notation: %(dfd).freeze,
      prefLabel: %(Defendant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dfe,
      label: "Defendant-appellee".freeze,
      :"mads:authoritativeLabel" => %(Defendant-appellee).freeze,
      :"mads:code" => %(dfe).freeze,
      notation: %(dfe).freeze,
      prefLabel: %(Defendant-appellee).freeze,
      subPropertyOf: ["marcrelators:dfd".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dft,
      label: "Defendant-appellant".freeze,
      :"mads:authoritativeLabel" => %(Defendant-appellant).freeze,
      :"mads:code" => %(dft).freeze,
      notation: %(dft).freeze,
      prefLabel: %(Defendant-appellant).freeze,
      subPropertyOf: ["marcrelators:dfd".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dgg,
      label: "Degree granting institution".freeze,
      :"mads:authoritativeLabel" => %(Degree granting institution).freeze,
      :"mads:code" => %(dgg).freeze,
      notation: %(dgg).freeze,
      prefLabel: %(Degree granting institution).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dgs,
      label: "Degree supervisor".freeze,
      :"mads:authoritativeLabel" => %(Degree supervisor).freeze,
      :"mads:code" => %(dgs).freeze,
      notation: %(dgs).freeze,
      prefLabel: %(Degree supervisor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dis,
      label: "Dissertant".freeze,
      :"mads:authoritativeLabel" => %(Dissertant).freeze,
      :"mads:code" => %(dis).freeze,
      notation: %(dis).freeze,
      prefLabel: %(Dissertant).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dln,
      label: "Delineator".freeze,
      :"mads:authoritativeLabel" => %(Delineator).freeze,
      :"mads:code" => %(dln).freeze,
      notation: %(dln).freeze,
      prefLabel: %(Delineator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dnc,
      label: "Dancer".freeze,
      :"mads:authoritativeLabel" => %(Dancer).freeze,
      :"mads:code" => %(dnc).freeze,
      notation: %(dnc).freeze,
      prefLabel: %(Dancer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dnr,
      label: "Donor".freeze,
      :"mads:authoritativeLabel" => %(Donor).freeze,
      :"mads:code" => %(dnr).freeze,
      notation: %(dnr).freeze,
      prefLabel: %(Donor).freeze,
      subPropertyOf: ["marcrelators:fmo".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dpc,
      label: "Depicted".freeze,
      :"mads:authoritativeLabel" => %(Depicted).freeze,
      :"mads:code" => %(dpc).freeze,
      notation: %(dpc).freeze,
      prefLabel: %(Depicted).freeze,
      subPropertyOf: ["dc11:subject".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dpt,
      label: "Depositor".freeze,
      :"mads:authoritativeLabel" => %(Depositor).freeze,
      :"mads:code" => %(dpt).freeze,
      notation: %(dpt).freeze,
      prefLabel: %(Depositor).freeze,
      subPropertyOf: ["marcrelators:own".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :drm,
      label: "Draftsman".freeze,
      :"mads:authoritativeLabel" => %(Draftsman).freeze,
      :"mads:code" => %(drm).freeze,
      notation: %(drm).freeze,
      prefLabel: %(Draftsman).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :drt,
      label: "Director".freeze,
      :"mads:authoritativeLabel" => %(Director).freeze,
      :"mads:code" => %(drt).freeze,
      notation: %(drt).freeze,
      prefLabel: %(Director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dsr,
      label: "Designer".freeze,
      :"mads:authoritativeLabel" => %(Designer).freeze,
      :"mads:code" => %(dsr).freeze,
      notation: %(dsr).freeze,
      prefLabel: %(Designer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dst,
      label: "Distributor".freeze,
      :"mads:authoritativeLabel" => %(Distributor).freeze,
      :"mads:code" => %(dst).freeze,
      notation: %(dst).freeze,
      prefLabel: %(Distributor).freeze,
      subPropertyOf: ["dc11:publisher".freeze, "marcrelators:prv".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dtc,
      label: "Data contributor".freeze,
      :"mads:authoritativeLabel" => %(Data contributor).freeze,
      :"mads:code" => %(dtc).freeze,
      notation: %(dtc).freeze,
      prefLabel: %(Data contributor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dte,
      label: "Dedicatee".freeze,
      :"mads:authoritativeLabel" => %(Dedicatee).freeze,
      :"mads:code" => %(dte).freeze,
      notation: %(dte).freeze,
      prefLabel: %(Dedicatee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dtm,
      label: "Data manager".freeze,
      :"mads:authoritativeLabel" => %(Data manager).freeze,
      :"mads:code" => %(dtm).freeze,
      notation: %(dtm).freeze,
      prefLabel: %(Data manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dto,
      label: "Dedicator".freeze,
      :"mads:authoritativeLabel" => %(Dedicator).freeze,
      :"mads:code" => %(dto).freeze,
      notation: %(dto).freeze,
      prefLabel: %(Dedicator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :dub,
      label: "Dubious author".freeze,
      :"mads:authoritativeLabel" => %(Dubious author).freeze,
      :"mads:code" => %(dub).freeze,
      notation: %(dub).freeze,
      prefLabel: %(Dubious author).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edc,
      label: "Editor of compilation".freeze,
      :"mads:authoritativeLabel" => %(Editor of compilation).freeze,
      :"mads:code" => %(edc).freeze,
      notation: %(edc).freeze,
      prefLabel: %(Editor of compilation).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edm,
      label: "Editor of moving image work".freeze,
      :"mads:authoritativeLabel" => %(Editor of moving image work).freeze,
      :"mads:code" => %(edm).freeze,
      notation: %(edm).freeze,
      prefLabel: %(Editor of moving image work).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :edt,
      label: "Editor".freeze,
      :"mads:authoritativeLabel" => %(Editor).freeze,
      :"mads:code" => %(edt).freeze,
      notation: %(edt).freeze,
      prefLabel: %(Editor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :egr,
      label: "Engraver".freeze,
      :"mads:authoritativeLabel" => %(Engraver).freeze,
      :"mads:code" => %(egr).freeze,
      notation: %(egr).freeze,
      prefLabel: %(Engraver).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :elg,
      label: "Electrician".freeze,
      :"mads:authoritativeLabel" => %(Electrician).freeze,
      :"mads:code" => %(elg).freeze,
      notation: %(elg).freeze,
      prefLabel: %(Electrician).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :elt,
      label: "Electrotyper".freeze,
      :"mads:authoritativeLabel" => %(Electrotyper).freeze,
      :"mads:code" => %(elt).freeze,
      notation: %(elt).freeze,
      prefLabel: %(Electrotyper).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :eng,
      label: "Engineer".freeze,
      :"mads:authoritativeLabel" => %(Engineer).freeze,
      :"mads:code" => %(eng).freeze,
      notation: %(eng).freeze,
      prefLabel: %(Engineer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :enj,
      label: "Enacting jurisdiction".freeze,
      :"mads:authoritativeLabel" => %(Enacting jurisdiction).freeze,
      :"mads:code" => %(enj).freeze,
      notation: %(enj).freeze,
      prefLabel: %(Enacting jurisdiction).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :etr,
      label: "Etcher".freeze,
      :"mads:authoritativeLabel" => %(Etcher).freeze,
      :"mads:code" => %(etr).freeze,
      notation: %(etr).freeze,
      prefLabel: %(Etcher).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :evp,
      label: "Event place".freeze,
      :"mads:authoritativeLabel" => %(Event place).freeze,
      :"mads:code" => %(evp).freeze,
      notation: %(evp).freeze,
      prefLabel: %(Event place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :exp,
      label: "Expert".freeze,
      :"mads:authoritativeLabel" => %(Expert).freeze,
      :"mads:code" => %(exp).freeze,
      notation: %(exp).freeze,
      prefLabel: %(Expert).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fac,
      label: "Facsimilist".freeze,
      :"mads:authoritativeLabel" => %(Facsimilist).freeze,
      :"mads:code" => %(fac).freeze,
      notation: %(fac).freeze,
      prefLabel: %(Facsimilist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fds,
      label: "Film distributor".freeze,
      :"mads:authoritativeLabel" => %(Film distributor).freeze,
      :"mads:code" => %(fds).freeze,
      notation: %(fds).freeze,
      prefLabel: %(Film distributor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:dst".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fld,
      label: "Field director".freeze,
      :"mads:authoritativeLabel" => %(Field director).freeze,
      :"mads:code" => %(fld).freeze,
      notation: %(fld).freeze,
      prefLabel: %(Field director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :flm,
      label: "Film editor".freeze,
      :"mads:authoritativeLabel" => %(Film editor).freeze,
      :"mads:code" => %(flm).freeze,
      notation: %(flm).freeze,
      prefLabel: %(Film editor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:edm".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmd,
      label: "Film director".freeze,
      :"mads:authoritativeLabel" => %(Film director).freeze,
      :"mads:code" => %(fmd).freeze,
      notation: %(fmd).freeze,
      prefLabel: %(Film director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:drt".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmk,
      label: "Filmmaker".freeze,
      :"mads:authoritativeLabel" => %(Filmmaker).freeze,
      :"mads:code" => %(fmk).freeze,
      notation: %(fmk).freeze,
      prefLabel: %(Filmmaker).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:drt".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmo,
      label: "Former owner".freeze,
      :"mads:authoritativeLabel" => %(Former owner).freeze,
      :"mads:code" => %(fmo).freeze,
      notation: %(fmo).freeze,
      prefLabel: %(Former owner).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fmp,
      label: "Film producer".freeze,
      :"mads:authoritativeLabel" => %(Film producer).freeze,
      :"mads:code" => %(fmp).freeze,
      notation: %(fmp).freeze,
      prefLabel: %(Film producer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:pro".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fnd,
      label: "Funder".freeze,
      :"mads:authoritativeLabel" => %(Funder).freeze,
      :"mads:code" => %(fnd).freeze,
      notation: %(fnd).freeze,
      prefLabel: %(Funder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :fpy,
      label: "First party".freeze,
      :"mads:authoritativeLabel" => %(First party).freeze,
      :"mads:code" => %(fpy).freeze,
      notation: %(fpy).freeze,
      prefLabel: %(First party).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :frg,
      label: "Forger".freeze,
      :"mads:authoritativeLabel" => %(Forger).freeze,
      :"mads:code" => %(frg).freeze,
      notation: %(frg).freeze,
      prefLabel: %(Forger).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :gis,
      label: "Geographic information specialist".freeze,
      :"mads:authoritativeLabel" => %(Geographic information specialist).freeze,
      :"mads:code" => %(gis).freeze,
      notation: %(gis).freeze,
      prefLabel: %(Geographic information specialist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :his,
      label: "Host institution".freeze,
      :"mads:authoritativeLabel" => %(Host institution).freeze,
      :"mads:code" => %(his).freeze,
      notation: %(his).freeze,
      prefLabel: %(Host institution).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:hst".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :hnr,
      label: "Honoree".freeze,
      :"mads:authoritativeLabel" => %(Honoree).freeze,
      :"mads:code" => %(hnr).freeze,
      notation: %(hnr).freeze,
      prefLabel: %(Honoree).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :hst,
      label: "Host".freeze,
      :"mads:authoritativeLabel" => %(Host).freeze,
      :"mads:code" => %(hst).freeze,
      notation: %(hst).freeze,
      prefLabel: %(Host).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ill,
      label: "Illustrator".freeze,
      :"mads:authoritativeLabel" => %(Illustrator).freeze,
      :"mads:code" => %(ill).freeze,
      notation: %(ill).freeze,
      prefLabel: %(Illustrator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ilu,
      label: "Illuminator".freeze,
      :"mads:authoritativeLabel" => %(Illuminator).freeze,
      :"mads:code" => %(ilu).freeze,
      notation: %(ilu).freeze,
      prefLabel: %(Illuminator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ins,
      label: "Inscriber".freeze,
      :"mads:authoritativeLabel" => %(Inscriber).freeze,
      :"mads:code" => %(ins).freeze,
      notation: %(ins).freeze,
      prefLabel: %(Inscriber).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :inv,
      label: "Inventor".freeze,
      :"mads:authoritativeLabel" => %(Inventor).freeze,
      :"mads:code" => %(inv).freeze,
      notation: %(inv).freeze,
      prefLabel: %(Inventor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :isb,
      label: "Issuing body".freeze,
      :"mads:authoritativeLabel" => %(Issuing body).freeze,
      :"mads:code" => %(isb).freeze,
      notation: %(isb).freeze,
      prefLabel: %(Issuing body).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :itr,
      label: "Instrumentalist".freeze,
      :"mads:authoritativeLabel" => %(Instrumentalist).freeze,
      :"mads:code" => %(itr).freeze,
      notation: %(itr).freeze,
      prefLabel: %(Instrumentalist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ive,
      label: "Interviewee".freeze,
      :"mads:authoritativeLabel" => %(Interviewee).freeze,
      :"mads:code" => %(ive).freeze,
      notation: %(ive).freeze,
      prefLabel: %(Interviewee).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ivr,
      label: "Interviewer".freeze,
      :"mads:authoritativeLabel" => %(Interviewer).freeze,
      :"mads:code" => %(ivr).freeze,
      notation: %(ivr).freeze,
      prefLabel: %(Interviewer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :jud,
      label: "Judge".freeze,
      :"mads:authoritativeLabel" => %(Judge).freeze,
      :"mads:code" => %(jud).freeze,
      notation: %(jud).freeze,
      prefLabel: %(Judge).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :jug,
      label: "Jurisdiction governed".freeze,
      :"mads:authoritativeLabel" => %(Jurisdiction governed).freeze,
      :"mads:code" => %(jug).freeze,
      notation: %(jug).freeze,
      prefLabel: %(Jurisdiction governed).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lbr,
      label: "Laboratory".freeze,
      :"mads:authoritativeLabel" => %(Laboratory).freeze,
      :"mads:code" => %(lbr).freeze,
      notation: %(lbr).freeze,
      prefLabel: %(Laboratory).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lbt,
      label: "Librettist".freeze,
      :"mads:authoritativeLabel" => %(Librettist).freeze,
      :"mads:code" => %(lbt).freeze,
      notation: %(lbt).freeze,
      prefLabel: %(Librettist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ldr,
      label: "Laboratory director".freeze,
      :"mads:authoritativeLabel" => %(Laboratory director).freeze,
      :"mads:code" => %(ldr).freeze,
      notation: %(ldr).freeze,
      prefLabel: %(Laboratory director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :led,
      label: "Lead".freeze,
      :"mads:authoritativeLabel" => %(Lead).freeze,
      :"mads:code" => %(led).freeze,
      notation: %(led).freeze,
      prefLabel: %(Lead).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lee,
      label: "Libelee-appellee".freeze,
      :"mads:authoritativeLabel" => %(Libelee-appellee).freeze,
      :"mads:code" => %(lee).freeze,
      notation: %(lee).freeze,
      prefLabel: %(Libelee-appellee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lel,
      label: "Libelee".freeze,
      :"mads:authoritativeLabel" => %(Libelee).freeze,
      :"mads:code" => %(lel).freeze,
      notation: %(lel).freeze,
      prefLabel: %(Libelee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :len,
      label: "Lender".freeze,
      :"mads:authoritativeLabel" => %(Lender).freeze,
      :"mads:code" => %(len).freeze,
      notation: %(len).freeze,
      prefLabel: %(Lender).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :let,
      label: "Libelee-appellant".freeze,
      :"mads:authoritativeLabel" => %(Libelee-appellant).freeze,
      :"mads:code" => %(let).freeze,
      notation: %(let).freeze,
      prefLabel: %(Libelee-appellant).freeze,
      subPropertyOf: ["marcrelators:lel".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lgd,
      label: "Lighting designer".freeze,
      :"mads:authoritativeLabel" => %(Lighting designer).freeze,
      :"mads:code" => %(lgd).freeze,
      notation: %(lgd).freeze,
      prefLabel: %(Lighting designer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lie,
      label: "Libelant-appellee".freeze,
      :"mads:authoritativeLabel" => %(Libelant-appellee).freeze,
      :"mads:code" => %(lie).freeze,
      notation: %(lie).freeze,
      prefLabel: %(Libelant-appellee).freeze,
      subPropertyOf: ["marcrelators:lil".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lil,
      label: "Libelant".freeze,
      :"mads:authoritativeLabel" => %(Libelant).freeze,
      :"mads:code" => %(lil).freeze,
      notation: %(lil).freeze,
      prefLabel: %(Libelant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lit,
      label: "Libelant-appellant".freeze,
      :"mads:authoritativeLabel" => %(Libelant-appellant).freeze,
      :"mads:code" => %(lit).freeze,
      notation: %(lit).freeze,
      prefLabel: %(Libelant-appellant).freeze,
      subPropertyOf: ["marcrelators:lil".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lsa,
      label: "Landscape architect".freeze,
      :"mads:authoritativeLabel" => %(Landscape architect).freeze,
      :"mads:code" => %(lsa).freeze,
      notation: %(lsa).freeze,
      prefLabel: %(Landscape architect).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:arc".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lse,
      label: "Licensee".freeze,
      :"mads:authoritativeLabel" => %(Licensee).freeze,
      :"mads:code" => %(lse).freeze,
      notation: %(lse).freeze,
      prefLabel: %(Licensee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lso,
      label: "Licensor".freeze,
      :"mads:authoritativeLabel" => %(Licensor).freeze,
      :"mads:code" => %(lso).freeze,
      notation: %(lso).freeze,
      prefLabel: %(Licensor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ltg,
      label: "Lithographer".freeze,
      :"mads:authoritativeLabel" => %(Lithographer).freeze,
      :"mads:code" => %(ltg).freeze,
      notation: %(ltg).freeze,
      prefLabel: %(Lithographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :lyr,
      label: "Lyricist".freeze,
      :"mads:authoritativeLabel" => %(Lyricist).freeze,
      :"mads:code" => %(lyr).freeze,
      notation: %(lyr).freeze,
      prefLabel: %(Lyricist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mcp,
      label: "Music copyist".freeze,
      :"mads:authoritativeLabel" => %(Music copyist).freeze,
      :"mads:code" => %(mcp).freeze,
      notation: %(mcp).freeze,
      prefLabel: %(Music copyist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mdc,
      label: "Metadata contact".freeze,
      :"mads:authoritativeLabel" => %(Metadata contact).freeze,
      :"mads:code" => %(mdc).freeze,
      notation: %(mdc).freeze,
      prefLabel: %(Metadata contact).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :med,
      label: "Medium".freeze,
      :"mads:authoritativeLabel" => %(Medium).freeze,
      :"mads:code" => %(med).freeze,
      notation: %(med).freeze,
      prefLabel: %(Medium).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mfp,
      label: "Manufacture place".freeze,
      :"mads:authoritativeLabel" => %(Manufacture place).freeze,
      :"mads:code" => %(mfp).freeze,
      notation: %(mfp).freeze,
      prefLabel: %(Manufacture place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mfr,
      label: "Manufacturer".freeze,
      :"mads:authoritativeLabel" => %(Manufacturer).freeze,
      :"mads:code" => %(mfr).freeze,
      notation: %(mfr).freeze,
      prefLabel: %(Manufacturer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prv".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mod,
      label: "Moderator".freeze,
      :"mads:authoritativeLabel" => %(Moderator).freeze,
      :"mads:code" => %(mod).freeze,
      notation: %(mod).freeze,
      prefLabel: %(Moderator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mon,
      label: "Monitor".freeze,
      :"mads:authoritativeLabel" => %(Monitor).freeze,
      :"mads:code" => %(mon).freeze,
      notation: %(mon).freeze,
      prefLabel: %(Monitor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mrb,
      label: "Marbler".freeze,
      :"mads:authoritativeLabel" => %(Marbler).freeze,
      :"mads:code" => %(mrb).freeze,
      notation: %(mrb).freeze,
      prefLabel: %(Marbler).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mrk,
      label: "Markup editor".freeze,
      :"mads:authoritativeLabel" => %(Markup editor).freeze,
      :"mads:code" => %(mrk).freeze,
      notation: %(mrk).freeze,
      prefLabel: %(Markup editor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :msd,
      label: "Musical director".freeze,
      :"mads:authoritativeLabel" => %(Musical director).freeze,
      :"mads:code" => %(msd).freeze,
      notation: %(msd).freeze,
      prefLabel: %(Musical director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mte,
      label: "Metal-engraver".freeze,
      :"mads:authoritativeLabel" => %(Metal-engraver).freeze,
      :"mads:code" => %(mte).freeze,
      notation: %(mte).freeze,
      prefLabel: %(Metal-engraver).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:egr".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mtk,
      label: "Minute taker".freeze,
      :"mads:authoritativeLabel" => %(Minute taker).freeze,
      :"mads:code" => %(mtk).freeze,
      notation: %(mtk).freeze,
      prefLabel: %(Minute taker).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :mus,
      label: "Musician".freeze,
      :"mads:authoritativeLabel" => %(Musician).freeze,
      :"mads:code" => %(mus).freeze,
      notation: %(mus).freeze,
      prefLabel: %(Musician).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :nrt,
      label: "Narrator".freeze,
      :"mads:authoritativeLabel" => %(Narrator).freeze,
      :"mads:code" => %(nrt).freeze,
      notation: %(nrt).freeze,
      prefLabel: %(Narrator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :opn,
      label: "Opponent".freeze,
      :"mads:authoritativeLabel" => %(Opponent).freeze,
      :"mads:code" => %(opn).freeze,
      notation: %(opn).freeze,
      prefLabel: %(Opponent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :org,
      label: "Originator".freeze,
      :"mads:authoritativeLabel" => %(Originator).freeze,
      :"mads:code" => %(org).freeze,
      notation: %(org).freeze,
      prefLabel: %(Originator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :orm,
      label: "Organizer".freeze,
      :"mads:authoritativeLabel" => %(Organizer).freeze,
      :"mads:code" => %(orm).freeze,
      notation: %(orm).freeze,
      prefLabel: %(Organizer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :osp,
      label: "Onscreen presenter".freeze,
      :"mads:authoritativeLabel" => %(Onscreen presenter).freeze,
      :"mads:code" => %(osp).freeze,
      notation: %(osp).freeze,
      prefLabel: %(Onscreen presenter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :oth,
      label: "Other".freeze,
      :"mads:authoritativeLabel" => %(Other).freeze,
      :"mads:code" => %(oth).freeze,
      notation: %(oth).freeze,
      prefLabel: %(Other).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :own,
      label: "Owner".freeze,
      :"mads:authoritativeLabel" => %(Owner).freeze,
      :"mads:code" => %(own).freeze,
      notation: %(own).freeze,
      prefLabel: %(Owner).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pan,
      label: "Panelist".freeze,
      :"mads:authoritativeLabel" => %(Panelist).freeze,
      :"mads:code" => %(pan).freeze,
      notation: %(pan).freeze,
      prefLabel: %(Panelist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pat,
      label: "Patron".freeze,
      :"mads:authoritativeLabel" => %(Patron).freeze,
      :"mads:code" => %(pat).freeze,
      notation: %(pat).freeze,
      prefLabel: %(Patron).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pbd,
      label: "Publishing director".freeze,
      :"mads:authoritativeLabel" => %(Publishing director).freeze,
      :"mads:code" => %(pbd).freeze,
      notation: %(pbd).freeze,
      prefLabel: %(Publishing director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pbl,
      label: "Publisher".freeze,
      :"mads:authoritativeLabel" => %(Publisher).freeze,
      :"mads:code" => %(pbl).freeze,
      notation: %(pbl).freeze,
      prefLabel: %(Publisher).freeze,
      subPropertyOf: ["dc11:publisher".freeze, "marcrelators:prv".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pdr,
      label: "Project director".freeze,
      :"mads:authoritativeLabel" => %(Project director).freeze,
      :"mads:code" => %(pdr).freeze,
      notation: %(pdr).freeze,
      prefLabel: %(Project director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pfr,
      label: "Proofreader".freeze,
      :"mads:authoritativeLabel" => %(Proofreader).freeze,
      :"mads:code" => %(pfr).freeze,
      notation: %(pfr).freeze,
      prefLabel: %(Proofreader).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pht,
      label: "Photographer".freeze,
      :"mads:authoritativeLabel" => %(Photographer).freeze,
      :"mads:code" => %(pht).freeze,
      notation: %(pht).freeze,
      prefLabel: %(Photographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :plt,
      label: "Platemaker".freeze,
      :"mads:authoritativeLabel" => %(Platemaker).freeze,
      :"mads:code" => %(plt).freeze,
      notation: %(plt).freeze,
      prefLabel: %(Platemaker).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pma,
      label: "Permitting agency".freeze,
      :"mads:authoritativeLabel" => %(Permitting agency).freeze,
      :"mads:code" => %(pma).freeze,
      notation: %(pma).freeze,
      prefLabel: %(Permitting agency).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pmn,
      label: "Production manager".freeze,
      :"mads:authoritativeLabel" => %(Production manager).freeze,
      :"mads:code" => %(pmn).freeze,
      notation: %(pmn).freeze,
      prefLabel: %(Production manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pop,
      label: "Printer of plates".freeze,
      :"mads:authoritativeLabel" => %(Printer of plates).freeze,
      :"mads:code" => %(pop).freeze,
      notation: %(pop).freeze,
      prefLabel: %(Printer of plates).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ppm,
      label: "Papermaker".freeze,
      :"mads:authoritativeLabel" => %(Papermaker).freeze,
      :"mads:code" => %(ppm).freeze,
      notation: %(ppm).freeze,
      prefLabel: %(Papermaker).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ppt,
      label: "Puppeteer".freeze,
      :"mads:authoritativeLabel" => %(Puppeteer).freeze,
      :"mads:code" => %(ppt).freeze,
      notation: %(ppt).freeze,
      prefLabel: %(Puppeteer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pra,
      label: "Praeses".freeze,
      :"mads:authoritativeLabel" => %(Praeses).freeze,
      :"mads:code" => %(pra).freeze,
      notation: %(pra).freeze,
      prefLabel: %(Praeses).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prc,
      label: "Process contact".freeze,
      :"mads:authoritativeLabel" => %(Process contact).freeze,
      :"mads:code" => %(prc).freeze,
      notation: %(prc).freeze,
      prefLabel: %(Process contact).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prd,
      label: "Production personnel".freeze,
      :"mads:authoritativeLabel" => %(Production personnel).freeze,
      :"mads:code" => %(prd).freeze,
      notation: %(prd).freeze,
      prefLabel: %(Production personnel).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pre,
      label: "Presenter".freeze,
      :"mads:authoritativeLabel" => %(Presenter).freeze,
      :"mads:code" => %(pre).freeze,
      notation: %(pre).freeze,
      prefLabel: %(Presenter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prf,
      label: "Performer".freeze,
      :"mads:authoritativeLabel" => %(Performer).freeze,
      :"mads:code" => %(prf).freeze,
      notation: %(prf).freeze,
      prefLabel: %(Performer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prg,
      label: "Programmer".freeze,
      :"mads:authoritativeLabel" => %(Programmer).freeze,
      :"mads:code" => %(prg).freeze,
      notation: %(prg).freeze,
      prefLabel: %(Programmer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prm,
      label: "Printmaker".freeze,
      :"mads:authoritativeLabel" => %(Printmaker).freeze,
      :"mads:code" => %(prm).freeze,
      notation: %(prm).freeze,
      prefLabel: %(Printmaker).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prn,
      label: "Production company".freeze,
      :"mads:authoritativeLabel" => %(Production company).freeze,
      :"mads:code" => %(prn).freeze,
      notation: %(prn).freeze,
      prefLabel: %(Production company).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pro,
      label: "Producer".freeze,
      :"mads:authoritativeLabel" => %(Producer).freeze,
      :"mads:code" => %(pro).freeze,
      notation: %(pro).freeze,
      prefLabel: %(Producer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prv".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prp,
      label: "Production place".freeze,
      :"mads:authoritativeLabel" => %(Production place).freeze,
      :"mads:code" => %(prp).freeze,
      notation: %(prp).freeze,
      prefLabel: %(Production place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prs,
      label: "Production designer".freeze,
      :"mads:authoritativeLabel" => %(Production designer).freeze,
      :"mads:code" => %(prs).freeze,
      notation: %(prs).freeze,
      prefLabel: %(Production designer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prt,
      label: "Printer".freeze,
      :"mads:authoritativeLabel" => %(Printer).freeze,
      :"mads:code" => %(prt).freeze,
      notation: %(prt).freeze,
      prefLabel: %(Printer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :prv,
      label: "Provider".freeze,
      :"mads:authoritativeLabel" => %(Provider).freeze,
      :"mads:code" => %(prv).freeze,
      notation: %(prv).freeze,
      prefLabel: %(Provider).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pta,
      label: "Patent applicant".freeze,
      :"mads:authoritativeLabel" => %(Patent applicant).freeze,
      :"mads:code" => %(pta).freeze,
      notation: %(pta).freeze,
      prefLabel: %(Patent applicant).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pte,
      label: "Plaintiff-appellee".freeze,
      :"mads:authoritativeLabel" => %(Plaintiff-appellee).freeze,
      :"mads:code" => %(pte).freeze,
      notation: %(pte).freeze,
      prefLabel: %(Plaintiff-appellee).freeze,
      subPropertyOf: ["marcrelators:ptf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ptf,
      label: "Plaintiff".freeze,
      :"mads:authoritativeLabel" => %(Plaintiff).freeze,
      :"mads:code" => %(ptf).freeze,
      notation: %(ptf).freeze,
      prefLabel: %(Plaintiff).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pth,
      label: "Patent holder".freeze,
      :"mads:authoritativeLabel" => %(Patent holder).freeze,
      :"mads:code" => %(pth).freeze,
      notation: %(pth).freeze,
      prefLabel: %(Patent holder).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ptt,
      label: "Plaintiff-appellant".freeze,
      :"mads:authoritativeLabel" => %(Plaintiff-appellant).freeze,
      :"mads:code" => %(ptt).freeze,
      notation: %(ptt).freeze,
      prefLabel: %(Plaintiff-appellant).freeze,
      subPropertyOf: ["marcrelators:ptf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :pup,
      label: "Publication place".freeze,
      :"mads:authoritativeLabel" => %(Publication place).freeze,
      :"mads:code" => %(pup).freeze,
      notation: %(pup).freeze,
      prefLabel: %(Publication place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rbr,
      label: "Rubricator".freeze,
      :"mads:authoritativeLabel" => %(Rubricator).freeze,
      :"mads:code" => %(rbr).freeze,
      notation: %(rbr).freeze,
      prefLabel: %(Rubricator).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rcd,
      label: "Recordist".freeze,
      :"mads:authoritativeLabel" => %(Recordist).freeze,
      :"mads:code" => %(rcd).freeze,
      notation: %(rcd).freeze,
      prefLabel: %(Recordist).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rce,
      label: "Recording engineer".freeze,
      :"mads:authoritativeLabel" => %(Recording engineer).freeze,
      :"mads:code" => %(rce).freeze,
      notation: %(rce).freeze,
      prefLabel: %(Recording engineer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rcp,
      label: "Addressee".freeze,
      :"mads:authoritativeLabel" => %(Addressee).freeze,
      :"mads:code" => %(rcp).freeze,
      notation: %(rcp).freeze,
      prefLabel: %(Addressee).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rdd,
      label: "Radio director".freeze,
      :"mads:authoritativeLabel" => %(Radio director).freeze,
      :"mads:code" => %(rdd).freeze,
      notation: %(rdd).freeze,
      prefLabel: %(Radio director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:drt".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :red,
      label: "Redaktor".freeze,
      :"mads:authoritativeLabel" => %(Redaktor).freeze,
      :"mads:code" => %(red).freeze,
      notation: %(red).freeze,
      prefLabel: %(Redaktor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ren,
      label: "Renderer".freeze,
      :"mads:authoritativeLabel" => %(Renderer).freeze,
      :"mads:code" => %(ren).freeze,
      notation: %(ren).freeze,
      prefLabel: %(Renderer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :res,
      label: "Researcher".freeze,
      :"mads:authoritativeLabel" => %(Researcher).freeze,
      :"mads:code" => %(res).freeze,
      notation: %(res).freeze,
      prefLabel: %(Researcher).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rev,
      label: "Reviewer".freeze,
      :"mads:authoritativeLabel" => %(Reviewer).freeze,
      :"mads:code" => %(rev).freeze,
      notation: %(rev).freeze,
      prefLabel: %(Reviewer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :role,
      comment: %(This property and its sub-properties are used to associate a Bibliographic Resource with a Resource that played a part in the lifecycle of the Bibliographic Resource.  It is the inverse of relators:roleIn.).freeze,
      label: "role".freeze,
      type: "owl:ObjectProperty".freeze
    property :rpc,
      label: "Radio producer".freeze,
      :"mads:authoritativeLabel" => %(Radio producer).freeze,
      :"mads:code" => %(rpc).freeze,
      notation: %(rpc).freeze,
      prefLabel: %(Radio producer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:pro".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rps,
      label: "Repository".freeze,
      :"mads:authoritativeLabel" => %(Repository).freeze,
      :"mads:code" => %(rps).freeze,
      notation: %(rps).freeze,
      prefLabel: %(Repository).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rpt,
      label: "Reporter".freeze,
      :"mads:authoritativeLabel" => %(Reporter).freeze,
      :"mads:code" => %(rpt).freeze,
      notation: %(rpt).freeze,
      prefLabel: %(Reporter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rpy,
      label: "Responsible party".freeze,
      :"mads:authoritativeLabel" => %(Responsible party).freeze,
      :"mads:code" => %(rpy).freeze,
      notation: %(rpy).freeze,
      prefLabel: %(Responsible party).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rse,
      label: "Respondent-appellee".freeze,
      :"mads:authoritativeLabel" => %(Respondent-appellee).freeze,
      :"mads:code" => %(rse).freeze,
      notation: %(rse).freeze,
      prefLabel: %(Respondent-appellee).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:rsp".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsg,
      label: "Restager".freeze,
      :"mads:authoritativeLabel" => %(Restager).freeze,
      :"mads:code" => %(rsg).freeze,
      notation: %(rsg).freeze,
      prefLabel: %(Restager).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsp,
      label: "Respondent".freeze,
      :"mads:authoritativeLabel" => %(Respondent).freeze,
      :"mads:code" => %(rsp).freeze,
      notation: %(rsp).freeze,
      prefLabel: %(Respondent).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rsr,
      label: "Restorationist".freeze,
      :"mads:authoritativeLabel" => %(Restorationist).freeze,
      :"mads:code" => %(rsr).freeze,
      notation: %(rsr).freeze,
      prefLabel: %(Restorationist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rst,
      label: "Respondent-appellant".freeze,
      :"mads:authoritativeLabel" => %(Respondent-appellant).freeze,
      :"mads:code" => %(rst).freeze,
      notation: %(rst).freeze,
      prefLabel: %(Respondent-appellant).freeze,
      subPropertyOf: ["marcrelators:role".freeze, "marcrelators:rsp".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rth,
      label: "Research team head".freeze,
      :"mads:authoritativeLabel" => %(Research team head).freeze,
      :"mads:code" => %(rth).freeze,
      notation: %(rth).freeze,
      prefLabel: %(Research team head).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :rtm,
      label: "Research team member".freeze,
      :"mads:authoritativeLabel" => %(Research team member).freeze,
      :"mads:code" => %(rtm).freeze,
      notation: %(rtm).freeze,
      prefLabel: %(Research team member).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sad,
      label: "Scientific advisor".freeze,
      :"mads:authoritativeLabel" => %(Scientific advisor).freeze,
      :"mads:code" => %(sad).freeze,
      notation: %(sad).freeze,
      prefLabel: %(Scientific advisor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sce,
      label: "Scenarist".freeze,
      :"mads:authoritativeLabel" => %(Scenarist).freeze,
      :"mads:code" => %(sce).freeze,
      notation: %(sce).freeze,
      prefLabel: %(Scenarist).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :scl,
      label: "Sculptor".freeze,
      :"mads:authoritativeLabel" => %(Sculptor).freeze,
      :"mads:code" => %(scl).freeze,
      notation: %(scl).freeze,
      prefLabel: %(Sculptor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:aut".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :scr,
      label: "Scribe".freeze,
      :"mads:authoritativeLabel" => %(Scribe).freeze,
      :"mads:code" => %(scr).freeze,
      notation: %(scr).freeze,
      prefLabel: %(Scribe).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sds,
      label: "Sound designer".freeze,
      :"mads:authoritativeLabel" => %(Sound designer).freeze,
      :"mads:code" => %(sds).freeze,
      notation: %(sds).freeze,
      prefLabel: %(Sound designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sec,
      label: "Secretary".freeze,
      :"mads:authoritativeLabel" => %(Secretary).freeze,
      :"mads:code" => %(sec).freeze,
      notation: %(sec).freeze,
      prefLabel: %(Secretary).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sgd,
      label: "Stage director".freeze,
      :"mads:authoritativeLabel" => %(Stage director).freeze,
      :"mads:code" => %(sgd).freeze,
      notation: %(sgd).freeze,
      prefLabel: %(Stage director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sgn,
      label: "Signer".freeze,
      :"mads:authoritativeLabel" => %(Signer).freeze,
      :"mads:code" => %(sgn).freeze,
      notation: %(sgn).freeze,
      prefLabel: %(Signer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sht,
      label: "Supporting host".freeze,
      :"mads:authoritativeLabel" => %(Supporting host).freeze,
      :"mads:code" => %(sht).freeze,
      notation: %(sht).freeze,
      prefLabel: %(Supporting host).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sll,
      label: "Seller".freeze,
      :"mads:authoritativeLabel" => %(Seller).freeze,
      :"mads:code" => %(sll).freeze,
      notation: %(sll).freeze,
      prefLabel: %(Seller).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:fmo".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :sng,
      label: "Singer".freeze,
      :"mads:authoritativeLabel" => %(Singer).freeze,
      :"mads:code" => %(sng).freeze,
      notation: %(sng).freeze,
      prefLabel: %(Singer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spk,
      label: "Speaker".freeze,
      :"mads:authoritativeLabel" => %(Speaker).freeze,
      :"mads:code" => %(spk).freeze,
      notation: %(spk).freeze,
      prefLabel: %(Speaker).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spn,
      label: "Sponsor".freeze,
      :"mads:authoritativeLabel" => %(Sponsor).freeze,
      :"mads:code" => %(spn).freeze,
      notation: %(spn).freeze,
      prefLabel: %(Sponsor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :spy,
      label: "Second party".freeze,
      :"mads:authoritativeLabel" => %(Second party).freeze,
      :"mads:code" => %(spy).freeze,
      notation: %(spy).freeze,
      prefLabel: %(Second party).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :srv,
      label: "Surveyor".freeze,
      :"mads:authoritativeLabel" => %(Surveyor).freeze,
      :"mads:code" => %(srv).freeze,
      notation: %(srv).freeze,
      prefLabel: %(Surveyor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :std,
      label: "Set designer".freeze,
      :"mads:authoritativeLabel" => %(Set designer).freeze,
      :"mads:code" => %(std).freeze,
      notation: %(std).freeze,
      prefLabel: %(Set designer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stg,
      label: "Setting".freeze,
      :"mads:authoritativeLabel" => %(Setting).freeze,
      :"mads:code" => %(stg).freeze,
      notation: %(stg).freeze,
      prefLabel: %(Setting).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stl,
      label: "Storyteller".freeze,
      :"mads:authoritativeLabel" => %(Storyteller).freeze,
      :"mads:code" => %(stl).freeze,
      notation: %(stl).freeze,
      prefLabel: %(Storyteller).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stm,
      label: "Stage manager".freeze,
      :"mads:authoritativeLabel" => %(Stage manager).freeze,
      :"mads:code" => %(stm).freeze,
      notation: %(stm).freeze,
      prefLabel: %(Stage manager).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :stn,
      label: "Standards body".freeze,
      :"mads:authoritativeLabel" => %(Standards body).freeze,
      :"mads:code" => %(stn).freeze,
      notation: %(stn).freeze,
      prefLabel: %(Standards body).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :str,
      label: "Stereotyper".freeze,
      :"mads:authoritativeLabel" => %(Stereotyper).freeze,
      :"mads:code" => %(str).freeze,
      notation: %(str).freeze,
      prefLabel: %(Stereotyper).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tcd,
      label: "Technical director".freeze,
      :"mads:authoritativeLabel" => %(Technical director).freeze,
      :"mads:code" => %(tcd).freeze,
      notation: %(tcd).freeze,
      prefLabel: %(Technical director).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tch,
      label: "Teacher".freeze,
      :"mads:authoritativeLabel" => %(Teacher).freeze,
      :"mads:code" => %(tch).freeze,
      notation: %(tch).freeze,
      prefLabel: %(Teacher).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:prf".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :ths,
      label: "Thesis advisor".freeze,
      :"mads:authoritativeLabel" => %(Thesis advisor).freeze,
      :"mads:code" => %(ths).freeze,
      notation: %(ths).freeze,
      prefLabel: %(Thesis advisor).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tld,
      label: "Television director".freeze,
      :"mads:authoritativeLabel" => %(Television director).freeze,
      :"mads:code" => %(tld).freeze,
      notation: %(tld).freeze,
      prefLabel: %(Television director).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:drt".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tlp,
      label: "Television producer".freeze,
      :"mads:authoritativeLabel" => %(Television producer).freeze,
      :"mads:code" => %(tlp).freeze,
      notation: %(tlp).freeze,
      prefLabel: %(Television producer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:pro".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :trc,
      label: "Transcriber".freeze,
      :"mads:authoritativeLabel" => %(Transcriber).freeze,
      :"mads:code" => %(trc).freeze,
      notation: %(trc).freeze,
      prefLabel: %(Transcriber).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :trl,
      label: "Translator".freeze,
      :"mads:authoritativeLabel" => %(Translator).freeze,
      :"mads:code" => %(trl).freeze,
      notation: %(trl).freeze,
      prefLabel: %(Translator).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tyd,
      label: "Type designer".freeze,
      :"mads:authoritativeLabel" => %(Type designer).freeze,
      :"mads:code" => %(tyd).freeze,
      notation: %(tyd).freeze,
      prefLabel: %(Type designer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :tyg,
      label: "Typographer".freeze,
      :"mads:authoritativeLabel" => %(Typographer).freeze,
      :"mads:code" => %(tyg).freeze,
      notation: %(tyg).freeze,
      prefLabel: %(Typographer).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :uvp,
      label: "University place".freeze,
      :"mads:authoritativeLabel" => %(University place).freeze,
      :"mads:code" => %(uvp).freeze,
      notation: %(uvp).freeze,
      prefLabel: %(University place).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :vac,
      label: "Voice actor".freeze,
      :"mads:authoritativeLabel" => %(Voice actor).freeze,
      :"mads:code" => %(vac).freeze,
      notation: %(vac).freeze,
      prefLabel: %(Voice actor).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:act".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :vdg,
      label: "Videographer".freeze,
      :"mads:authoritativeLabel" => %(Videographer).freeze,
      :"mads:code" => %(vdg).freeze,
      notation: %(vdg).freeze,
      prefLabel: %(Videographer).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wac,
      label: "Writer of added commentary".freeze,
      :"mads:authoritativeLabel" => %(Writer of added commentary).freeze,
      :"mads:code" => %(wac).freeze,
      notation: %(wac).freeze,
      prefLabel: %(Writer of added commentary).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze, "marcrelators:wst".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wal,
      label: "Writer of added lyrics".freeze,
      :"mads:authoritativeLabel" => %(Writer of added lyrics).freeze,
      :"mads:code" => %(wal).freeze,
      notation: %(wal).freeze,
      prefLabel: %(Writer of added lyrics).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze, "marcrelators:wst".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wam,
      label: "Writer of accompanying material".freeze,
      :"mads:authoritativeLabel" => %(Writer of accompanying material).freeze,
      :"mads:code" => %(wam).freeze,
      notation: %(wam).freeze,
      prefLabel: %(Writer of accompanying material).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wat,
      label: "Writer of added text".freeze,
      :"mads:authoritativeLabel" => %(Writer of added text).freeze,
      :"mads:code" => %(wat).freeze,
      notation: %(wat).freeze,
      prefLabel: %(Writer of added text).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze, "marcrelators:wst".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wdc,
      label: "Woodcutter".freeze,
      :"mads:authoritativeLabel" => %(Woodcutter).freeze,
      :"mads:code" => %(wdc).freeze,
      notation: %(wdc).freeze,
      prefLabel: %(Woodcutter).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wde,
      label: "Wood engraver".freeze,
      :"mads:authoritativeLabel" => %(Wood engraver).freeze,
      :"mads:code" => %(wde).freeze,
      notation: %(wde).freeze,
      prefLabel: %(Wood engraver).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :win,
      label: "Writer of introduction".freeze,
      :"mads:authoritativeLabel" => %(Writer of introduction).freeze,
      :"mads:code" => %(win).freeze,
      notation: %(win).freeze,
      prefLabel: %(Writer of introduction).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wit,
      label: "Witness".freeze,
      :"mads:authoritativeLabel" => %(Witness).freeze,
      :"mads:code" => %(wit).freeze,
      notation: %(wit).freeze,
      prefLabel: %(Witness).freeze,
      subPropertyOf: "marcrelators:role".freeze,
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wpr,
      label: "Writer of preface".freeze,
      :"mads:authoritativeLabel" => %(Writer of preface).freeze,
      :"mads:code" => %(wpr).freeze,
      notation: %(wpr).freeze,
      prefLabel: %(Writer of preface).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]
    property :wst,
      label: "Writer of supplementary textual content".freeze,
      :"mads:authoritativeLabel" => %(Writer of supplementary textual content).freeze,
      :"mads:code" => %(wst).freeze,
      notation: %(wst).freeze,
      prefLabel: %(Writer of supplementary textual content).freeze,
      subPropertyOf: ["dc11:contributor".freeze, "marcrelators:role".freeze],
      type: ["mads:Authority".freeze, "mads:Topic".freeze, "owl:ObjectProperty".freeze, "skos:Concept".freeze]

    # Extra definitions
    term :collection_BIBFRAMEInstance,
      label: "Relators - BIBFRAME Instance Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_BIBFRAMEWork,
      label: "Relators - BIBFRAME Work Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDA,
      label: "Relators - RDA Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAContributor,
      label: "Relators - RDA Contributor Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDACreator,
      label: "Relators - RDA Creator Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDADistributor,
      label: "Relators - RDA Distributor Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAExpression,
      label: "Relators - RDA Expression Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAItem,
      label: "Relators - RDA Item Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAManifestation,
      label: "Relators - RDA Manifestation Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAManufacturer,
      label: "Relators - RDA Manufacturer Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAOther,
      label: "Relators - RDA Other Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAOwner,
      label: "Relators - RDA Owner Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAPublisher,
      label: "Relators - RDA Publisher Collection".freeze,
      type: "mads:MADSCollection".freeze
    term :collection_RDAWork,
      label: "Relators - RDA Work Collection".freeze,
      type: "mads:MADSCollection".freeze
  end
end
