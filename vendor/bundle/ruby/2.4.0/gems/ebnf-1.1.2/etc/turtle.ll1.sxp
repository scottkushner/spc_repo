(
 (rule _empty "0" (first _eps) (seq))
 (rule turtleDoc "1"
  (start #t)
  (first "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eps )
  (follow _eof)
  (cleanup star)
  (alt _empty _turtleDoc_1))
 (rule _turtleDoc_1 "1.1"
  (first "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" )
  (follow _eof)
  (cleanup merge)
  (seq statement turtleDoc))
 (rule _turtleDoc_2 "1.2"
  (first "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eps )
  (follow _eof)
  (seq turtleDoc))
 (rule statement "2"
  (first "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" )
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (alt directive _statement_1))
 (rule _statement_1 "2.1"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[")
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq triples "."))
 (rule _statement_2 "2.2"
  (first ".")
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq "."))
 (rule directive "3"
  (first "@base" "@prefix" SPARQL_BASE SPARQL_PREFIX)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (alt prefixID base sparqlPrefix sparqlBase))
 (rule prefixID "4"
  (first "@prefix")
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq "@prefix" PNAME_NS IRIREF "."))
 (rule _prefixID_1 "4.1"
  (first PNAME_NS)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq PNAME_NS IRIREF "."))
 (rule base "5"
  (first "@base")
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq "@base" IRIREF "."))
 (rule _base_1 "5.1"
  (first IRIREF)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq IRIREF "."))
 (rule triples "6"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[")
  (follow ".")
  (alt _triples_1 _triples_2))
 (rule _triples_1 "6.1"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS)
  (follow ".")
  (seq subject predicateObjectList))
 (rule _triples_2 "6.2" (first "[") (follow ".") (seq blankNodePropertyList _triples_3))
 (rule _triples_3 "6.3"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow ".")
  (cleanup opt)
  (alt _empty predicateObjectList))
 (rule _triples_4 "6.4"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow ".")
  (seq predicateObjectList))
 (rule _triples_5 "6.5"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow ".")
  (seq _triples_3))
 (rule predicateObjectList "7"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "." "]")
  (seq verb objectList _predicateObjectList_1))
 (rule _predicateObjectList_1 "7.1"
  (first ";" _eps)
  (follow "." "]")
  (cleanup star)
  (alt _empty _predicateObjectList_3))
 (rule _predicateObjectList_2 "7.2"
  (first ";")
  (follow "." ";" "]")
  (seq ";" _predicateObjectList_4))
 (rule _predicateObjectList_3 "7.3"
  (first ";")
  (follow "." "]")
  (cleanup merge)
  (seq _predicateObjectList_2 _predicateObjectList_1))
 (rule _predicateObjectList_4 "7.4"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." ";" "]")
  (cleanup opt)
  (alt _empty _predicateObjectList_5))
 (rule _predicateObjectList_5 "7.5"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "." ";" "]")
  (seq verb objectList))
 (rule _predicateObjectList_6 "7.6"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "." "]")
  (seq objectList _predicateObjectList_1))
 (rule _predicateObjectList_7 "7.7"
  (first ";" _eps)
  (follow "." "]")
  (seq _predicateObjectList_1))
 (rule _predicateObjectList_8 "7.8"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." ";" "]")
  (seq _predicateObjectList_4))
 (rule _predicateObjectList_9 "7.9"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "." ";" "]")
  (seq objectList))
 (rule objectList "8"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "." ";" "]")
  (seq object _objectList_1))
 (rule _objectList_1 "8.1"
  (first "," _eps)
  (follow "." ";" "]")
  (cleanup star)
  (alt _empty _objectList_3))
 (rule _objectList_2 "8.2" (first ",") (follow "," "." ";" "]") (seq "," object))
 (rule _objectList_3 "8.3"
  (first ",")
  (follow "." ";" "]")
  (cleanup merge)
  (seq _objectList_2 _objectList_1))
 (rule _objectList_4 "8.4" (first "," _eps) (follow "." ";" "]") (seq _objectList_1))
 (rule _objectList_5 "8.5" (first "," _eps) (follow "." ";" "]") (seq _objectList_1))
 (rule _objectList_6 "8.6"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "," "." ";" "]")
  (seq object))
 (rule verb "9"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (alt predicate "a"))
 (rule subject "10"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS)
  (follow IRIREF PNAME_LN PNAME_NS "a")
  (alt iri BlankNode collection))
 (rule predicate "11"
  (first IRIREF PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (seq iri))
 (rule object "12"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (alt iri BlankNode collection blankNodePropertyList literal))
 (rule literal "13"
  (first DECIMAL DOUBLE INTEGER STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "false" "true" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (alt RDFLiteral NumericLiteral BooleanLiteral))
 (rule blankNodePropertyList "14"
  (first "[")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq "[" predicateObjectList "]"))
 (rule _blankNodePropertyList_1 "14.1"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq predicateObjectList "]"))
 (rule _blankNodePropertyList_2 "14.2"
  (first "]")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq "]"))
 (rule collection "15"
  (first "(")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq "(" _collection_1 ")"))
 (rule _collection_1 "15.1"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" _eps "false" "true" )
  (follow ")")
  (cleanup star)
  (alt _empty _collection_2))
 (rule _collection_2 "15.2"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow ")")
  (cleanup merge)
  (seq object _collection_1))
 (rule _collection_3 "15.3"
  (first "(" ")" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq _collection_1 ")"))
 (rule _collection_4 "15.4"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" _eps "false" "true" )
  (follow ")")
  (seq _collection_1))
 (rule _collection_5 "15.5"
  (first ")")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (seq ")"))
 (rule NumericLiteral "16"
  (first DECIMAL DOUBLE INTEGER)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (alt INTEGER DECIMAL DOUBLE))
 (rule String "17"
  (first STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF LANGTAG PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "^^" "false" "true" )
  (alt STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_LONG_QUOTE ))
 (terminal IRIREF "18" (seq "<" (range "^#x00-#x20<>\"{}|^`] | UCHAR)* '>'")))
 (terminal INTEGER "19" (seq (opt (range "+-")) (plus (range "0-9"))))
 (terminal DECIMAL "20"
  (seq (opt (range "+-")) (seq (star (range "0-9")) "." (plus (range "0-9")))))
 (terminal DOUBLE "21"
  (seq
   (opt (range "+-"))
   (alt
    (seq (plus (range "0-9")) "." (star (range "0-9")) EXPONENT)
    (seq "." (plus (range "0-9")) EXPONENT)
    (seq (plus (range "0-9")) EXPONENT)) ))
 (terminal STRING_LITERAL_QUOTE "22"
  (seq "\"" (star (alt (range "^#x22#x5C#xA#xD") ECHAR UCHAR)) "\""))
 (terminal STRING_LITERAL_SINGLE_QUOTE "23"
  (seq "'" (star (alt (range "^#x27#x5C#xA#xD") ECHAR UCHAR)) "'"))
 (terminal STRING_LITERAL_LONG_SINGLE_QUOTE "24"
  (seq "'''" (seq (opt (alt "'" "''")) (range "^'] | ECHAR | UCHAR ))* \"'''\""))))
 (terminal STRING_LITERAL_LONG_QUOTE "25"
  (seq "\"\"\"" (seq (opt (alt "\"" "\"\"")) (range "^\"] | ECHAR | UCHAR ))* '\"\"\"'"))))
 (terminal UCHAR "26"
  (alt (seq "u" HEX HEX HEX HEX) (seq "U" HEX HEX HEX HEX HEX HEX HEX HEX)))
 (rule _sparqlPrefix_1 "28s.1"
  (first PNAME_NS)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq PNAME_NS IRIREF))
 (rule sparqlPrefix "28s"
  (first SPARQL_PREFIX)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq SPARQL_PREFIX PNAME_NS IRIREF))
 (terminal SPARQL_PREFIX "28t"
  (seq (range "Pp") (range "Rr") (range "Ee") (range "Ff") (range "Ii") (range "Xx")))
 (terminal SPARQL_BASE "29t" (seq (range "Bb") (range "Aa") (range "Ss") (range "Ee")))
 (rule _sparqlBase_1 "29s.1"
  (first IRIREF)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq IRIREF))
 (rule sparqlBase "29s"
  (first SPARQL_BASE)
  (follow "(" "@base" "@prefix" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS
   SPARQL_BASE SPARQL_PREFIX "[" _eof )
  (seq SPARQL_BASE IRIREF))
 (rule _RDFLiteral_1 "128s.1"
  (first LANGTAG "^^" _eps)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (cleanup opt)
  (alt _empty _RDFLiteral_2))
 (rule _RDFLiteral_3 "128s.3"
  (first "^^")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (seq "^^" iri))
 (rule _RDFLiteral_2 "128s.2"
  (first LANGTAG "^^")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (alt LANGTAG _RDFLiteral_3))
 (rule RDFLiteral "128s"
  (first STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (seq String _RDFLiteral_1))
 (rule _RDFLiteral_4 "128s.4"
  (first LANGTAG "^^" _eps)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (seq _RDFLiteral_1))
 (rule BooleanLiteral "133s"
  (first "false" "true")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" )
  (alt "true" "false"))
 (rule iri "135s"
  (first IRIREF PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (alt IRIREF PrefixedName))
 (rule PrefixedName "136s"
  (first PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (alt PNAME_LN PNAME_NS))
 (rule BlankNode "137s"
  (first ANON BLANK_NODE_LABEL)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" )
  (alt BLANK_NODE_LABEL ANON))
 (terminal PNAME_NS "139s" (seq (opt PN_PREFIX) ":"))
 (terminal PNAME_LN "140s" (seq PNAME_NS PN_LOCAL))
 (terminal BLANK_NODE_LABEL "141s"
  (seq "_:" (alt PN_CHARS_U (range "0-9")) (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal LANGTAG "144s"
  (seq "@" (plus (range "a-zA-Z")) (star (seq "-" (plus (range "a-zA-Z0-9"))))))
 (terminal EXPONENT "154s" (seq (range "eE") (opt (range "+-")) (plus (range "0-9"))))
 (terminal ECHAR "159s" (seq "\\" (range "tbnrf\"'")))
 (terminal WS "161s" (alt (hex "#x20") (hex "#x9") (hex "#xD") (hex "#xA")))
 (terminal ANON "162s" (seq "[" (star WS) "]"))
 (terminal PN_CHARS_BASE "163s"
  (alt
   (range "A-Z")
   (range "a-z")
   (range "#x00C0-#x00D6")
   (range "#x00D8-#x00F6")
   (range "#x00F8-#x02FF")
   (range "#x0370-#x037D")
   (range "#x037F-#x1FFF")
   (range "#x200C-#x200D")
   (range "#x2070-#x218F")
   (range "#x2C00-#x2FEF")
   (range "#x3001-#xD7FF")
   (range "#xF900-#xFDCF")
   (range "#xFDF0-#xFFFD")
   (range "#x10000-#xEFFFF")) )
 (terminal PN_CHARS_U "164s" (alt PN_CHARS_BASE "_"))
 (terminal PN_CHARS "166s"
  (alt PN_CHARS_U "-"
   (range "0-9")
   (hex "#x00B7")
   (range "#x0300-#x036F")
   (range "#x203F-#x2040")) )
 (terminal PN_PREFIX "167s"
  (seq PN_CHARS_BASE (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal PN_LOCAL "168s"
  (seq
   (alt PN_CHARS_U ":" (range "0-9") PLX)
   (opt (seq (star (alt PN_CHARS "." ":" PLX)) (alt PN_CHARS ":" PLX)))) )
 (terminal PLX "169s" (alt PERCENT PN_LOCAL_ESC))
 (terminal PERCENT "170s" (seq "%" HEX HEX))
 (terminal HEX "171s" (alt (range "0-9") (range "A-F") (range "a-f")))
 (terminal PN_LOCAL_ESC "172s"
  (seq "\\"
   (alt "_" "~" "." "-" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" "/" "?" "#"
    "@" "%" )) ))
